{"version":3,"sources":["components/field/field.jsx","components/playground/playground.jsx","App.js","serviceWorker.js","index.js"],"names":["Field","props","symbol","symbolValue","isWinner","lineDirection","btnDisabled","className","onClick","e","fieldClicked","id","Playground","_checkWinner","fields","state","winnerCards","length","newFields","direction","map","winnerID","setState","winnerFound","_handleFieldClick","fieldID","currentSymbolX","currentPlayer","_restartApp","clickedField","value","winner","this","currPlayer","field","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bb94138.chunk.js","sourcesContent":["import React from 'react';\nimport './field.css';\n\nexport const Field = (props) => {\n  const {symbolValue, isWinner, lineDirection, btnDisabled} = props;\n  var symbol;\n  if(symbolValue === \"\") symbol = '';\n  else if(symbolValue) symbol = <div className=\"symbol iks\"> <i className=\"fa fa-times\"></i> </div>;\n  else if (!symbolValue) symbol = <div className=\"symbol circle\"> <i className=\"fa fa-circle-o\"></i> </div>;\n\n  return(\n    <button className={ `btnDisabled-`+btnDisabled+` field`} onClick={(e) => props.fieldClicked(props.id)}>\n      {isWinner && \n        <div className={lineDirection + ` cross-line`}></div>\n      }\n      {symbol}\n    </button>\n  )\n}","import React, {Component} from 'react';\nimport './playground.css'\nimport {Field} from '../field/field'\n\nclass Playground extends Component{\n  constructor(){\n    super();\n    this.state = {\n      clickedField: 0,\n      fields: [\n        {\n          id: 0,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 1,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 2,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 3,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 4,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 5,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 6,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 7,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 8,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        }\n      ],\n      currentPlayer: true,\n      currentSymbolX: true,\n      winnerFound: false,\n      lineDirection: ''\n    }\n  }\n\n  _checkWinner = () => {\n    const {fields} = this.state;\n    var winnerCards = [];\n    if(fields[0]['value'] === fields[1]['value'] && fields[0]['value'] === fields[2]['value'] && fields[0]['value'] !== '') winnerCards = [0,1,2, 'horizontal'];\n    else if(fields[3]['value'] === fields[4]['value'] && fields[3]['value'] === fields[5]['value'] && fields[3]['value'] !== '') winnerCards = [3,4,5, 'horizontal'];\n    else if(fields[6]['value'] === fields[7]['value'] && fields[6]['value'] === fields[8]['value'] && fields[6]['value'] !== '') winnerCards = [6,7,8, 'horizontal'];\n\n    else if(fields[0]['value'] === fields[3]['value'] && fields[0]['value'] === fields[6]['value'] && fields[0]['value'] !== '') winnerCards = [0,3,6, 'vertical'];\n    else if(fields[1]['value'] === fields[4]['value'] && fields[1]['value'] === fields[7]['value'] && fields[1]['value'] !== '') winnerCards = [1,4,7, 'vertical'];\n    else if(fields[2]['value'] === fields[5]['value'] && fields[2]['value'] === fields[8]['value'] && fields[2]['value'] !== '') winnerCards = [2,5,8, 'vertical'];\n\n    else if(fields[0]['value'] === fields[4]['value'] && fields[0]['value'] === fields[8]['value'] && fields[0]['value'] !== '') winnerCards = [0,4,8, 'diagonalLeft'];\n    else if(fields[2]['value'] === fields[4]['value'] && fields[2]['value'] === fields[6]['value'] && fields[2]['value'] !== '') winnerCards = [2,4,6, 'diagonalRight'];\n\n    if(winnerCards.length > 0){\n      const {fields} = this.state;\n      var newFields = fields;\n      var direction = '';\n      winnerCards.map(winnerID => {\n        if(winnerID === 'horizontal' || winnerID === 'vertical' || winnerID === 'diagonalLeft' || winnerID === 'diagonalRight') {\n          direction = winnerID;\n        }\n        else newFields[winnerID]['winner'] = true;\n      })\n      this.setState({\n        winnerFound: true,\n        fields: newFields,\n        lineDirection: direction\n      });\n    }\n  }\n  _handleFieldClick = (fieldID) => {\n    const {fields, currentSymbolX} = this.state;\n    var newFields = fields;\n    newFields[fieldID]['value'] = currentSymbolX;\n    newFields[fieldID]['btnDisabled'] = true;\n    this.setState({\n      currentPlayer: !this.state.currentPlayer,\n      currentSymbolX: !this.state.currentSymbolX, \n      fields: newFields\n    });\n    this._checkWinner();\n  }\n\n  _restartApp = () => {\n    this.setState({\n      clickedField: 0,\n      fields: [\n        {\n          id: 0,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 1,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 2,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 3,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 4,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 5,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 6,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 7,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        },\n        {\n          id: 8,\n          value: '',\n          winner: false,\n          btnDisabled: false\n        }\n      ],\n      currentPlayer: true,\n      currentSymbolX: true,\n      winnerFound: false,\n      lineDirection: ''\n    })\n  }\n\n  render(){\n    const {currentPlayer, winnerFound, lineDirection} = this.state;\n    var currPlayer = '';\n    if(currentPlayer) currPlayer = 'Player 2';\n    else currPlayer = 'Player 1';\n\n    return(\n      <div className=\"container\">\n        {winnerFound &&\n          <div className=\"winner\">{currPlayer} won!</div>\n        }\n\n        <div className={`winner-`+winnerFound +` playground`}>\n        {\n          this.state.fields.map(field => \n            <Field key={field.id} isWinner={field.winner} lineDirection={lineDirection} symbolValue={field.value} fieldClicked={(e) => this._handleFieldClick(field.id)} btnDisabled={field.btnDisabled}/>  \n          )\n        }\n        </div>\n\n        {currentPlayer ? (\n          <h2 className=\"player player1\">Current move: <span>Player 1</span></h2>\n        ) : (\n          <h2 className=\"player player2\">Current move: <span>Player 2</span></h2>\n        )}\n        <button className=\"restart\" onClick={(e) => this._restartApp()}>Restart</button>\n      </div>\n    )\n  }\n\n}\nexport default Playground","import React from 'react';\nimport './App.css';\nimport Playground from './components/playground/playground'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"logo\">Tic Tac Toe</div>\n      <Playground />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}